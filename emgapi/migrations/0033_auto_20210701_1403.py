# Generated by Django 3.2 on 2021-07-01 14:03
import logging

from django.db import migrations, models
import django.db.models.deletion


def catalogue_hgut_genomes(apps, schema_editor):
    Genome = apps.get_model("emgapi", "Genome")
    Biome = apps.get_model("emgapi", "Biome")
    GenomeCatalogue = apps.get_model("emgapi", "GenomeCatalogue")

    gut_biome = Biome.objects.filter(lineage='root:Host-associated:Human:Digestive system:Large intestine').first()
    genomes = Genome.objects.filter(accession__startswith='MGYG_HGUT')

    if not genomes.exists():
        return

    if not gut_biome:
        logging.warning('No gut biome with lineage [root:Host-associated:Human:Digestive system:Large intestine] found;'
                        'not migrating existing genomes into a HGUT catalogue.')
        return

    hgut_catalogue = GenomeCatalogue.objects.get_or_create(catalogue_id='hgut', defaults={
        'name': 'Human Gut Microbiota',
        'biome': gut_biome
    })

    for genome in genomes:
        genome.catalogues.add(hgut_catalogue)
        genome.save()


class Migration(migrations.Migration):

    dependencies = [
        ('emgapi', '0032_auto_20210615_0939'),
    ]

    operations = [
        migrations.CreateModel(
            name='GenomeCatalogue',
            fields=[
                ('catalogue_id', models.SlugField(db_column='CATALOGUE_ID', max_length=100, primary_key=True, serialize=False)),
                ('name', models.CharField(db_column='NAME', max_length=100, unique=True)),
                ('description', models.TextField(blank=True, db_column='DESCRIPTION', null=True)),
                ('last_update', models.DateTimeField(auto_now=True, db_column='LAST_UPDATE')),
                ('biome', models.ForeignKey(db_column='BIOME_ID', on_delete=django.db.models.deletion.CASCADE, to='emgapi.biome')),
            ],
        ),
        migrations.CreateModel(
            name='GenomeCatalogueGenomes',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('genome', models.ForeignKey(db_column='GENOME_ID', on_delete=django.db.models.deletion.CASCADE, to='emgapi.genome')),
                ('genome_catalogue', models.ForeignKey(db_column='CATALOGUE_ID', on_delete=django.db.models.deletion.CASCADE, to='emgapi.genomecatalogue')),
            ],
            options={
                'db_table': 'GENOME_CATALOGUE_GENOMES',
                'unique_together': {('genome', 'genome_catalogue')},
            },
        ),
        migrations.AddField(
            model_name='genome',
            name='catalogues',
            field=models.ManyToManyField(through='emgapi.GenomeCatalogueGenomes', to='emgapi.GenomeCatalogue'),
        ),
        migrations.RunPython(catalogue_hgut_genomes, reverse_code=migrations.RunPython.noop),
    ]
