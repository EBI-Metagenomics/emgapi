# -*- coding: utf-8 -*-
# Generated by Django 1.11.10 on 2018-04-24 08:25
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion


def populate_status(apps, schema_editor):
    Status = apps.get_model("emgapi", "Status")
    st = (
        (1, "draft"),
        (2, "private"),
        (3, "cancelled"),
        (4, "public"),
        (5, "suppressed"),
        (6, "killed"),
        (7, "temporary_suppressed"),
        (8, "temporary_killed"),
    )
    _statuses = list()
    for s in st:
        _statuses.append(
            Status(
                status_id=s[0],
                status=s[1],
            )
        )
    Status.objects.bulk_create(_statuses)


def populate_runs(apps, schema_editor):
    # Too slow
    # migrations.RunSQL(
    #     """UPDATE ANALYSIS_JOB t1
    #         SET RUN_ID = (
    #             SELECT t2.RUN_ID FROM RUN t2
    #             WHERE t1.EXTERNAL_RUN_IDS=t2.EXTERNAL_RUN_IDS
    #     """
    # ),
    AnalysisJob = apps.get_model("emgapi", "AnalysisJob")
    Run = apps.get_model("emgapi", "Run")

    for aj in AnalysisJob.objects.all():
        aj.run = Run.objects.get(accession=aj.accession)
        aj.save()


class Migration(migrations.Migration):

    dependencies = [
        ('emgapi', '0006_download'),
    ]

    operations = [

        migrations.AlterField(
            model_name='experimenttype',
            name='experiment_type_id',
            field=models.SmallIntegerField(db_column='EXPERIMENT_TYPE_ID', primary_key=True, serialize=False),
        ),
        migrations.AlterField(
            model_name='analysisjob',
            name='job_operator',
            field=models.CharField(db_column='JOB_OPERATOR', blank=True, null=True, max_length=15),
        ),
        migrations.AlterField(
            model_name='analysisjob',
            name='pipeline',
            field=models.ForeignKey(blank=True, db_column='PIPELINE_ID', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='analysis', to='emgapi.Pipeline'),
        ),
        migrations.AlterField(
            model_name='analysisjob',
            name='submit_time',
            field=models.DateTimeField(blank=True, db_column='SUBMIT_TIME', null=True),
        ),

        migrations.CreateModel(
            name='Status',
            fields=[
                ('status_id', models.SmallIntegerField(db_column='STATUS_ID', primary_key=True, serialize=False)),
                ('status', models.CharField(db_column='STATUS', max_length=25)),
            ],
            options={
                'db_table': 'STATUS',
                'ordering': ('status_id',),
            },
        ),

        migrations.RunPython(populate_status),

        migrations.CreateModel(
            name='Run',
            fields=[
                ('run_id', models.BigAutoField(db_column='RUN_ID', primary_key=True, serialize=False)),
                ('accession', models.CharField(blank=True, db_column='EXTERNAL_RUN_IDS', max_length=80, null=True)),
                ('secondary_accession', models.CharField(blank=True, db_column='SECONDARY_ACCESSION', max_length=100, null=True)),
                ('instrument_platform', models.CharField(blank=True, db_column='INSTRUMENT_PLATFORM', max_length=100, null=True)),
                ('instrument_model', models.CharField(blank=True, db_column='INSTRUMENT_MODEL', max_length=100, null=True)),
            ],
            options={
                'db_table': 'RUN',
            },
        ),

        migrations.AddField(
            model_name='run',
            name='status_id',
            field=models.ForeignKey(db_column='STATUS_ID', on_delete=django.db.models.deletion.CASCADE, related_name='runs', to='emgapi.Status', default=2),
        ),
        migrations.AddField(
            model_name='run',
            name='sample',
            field=models.ForeignKey(blank=True, db_column='SAMPLE_ID', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='runs', to='emgapi.Sample'),
        ),
        migrations.AddField(
            model_name='run',
            name='study',
            field=models.ForeignKey(blank=True, db_column='STUDY_ID', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='runs', to='emgapi.Study'),
        ),
        migrations.AddField(
            model_name='run',
            name='experiment_type',
            field=models.ForeignKey(blank=True, db_column='EXPERIMENT_TYPE_ID', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='runs', to='emgapi.ExperimentType'),
        ),

        migrations.AddField(
            model_name='analysisjob',
            name='run',
            field=models.ForeignKey(blank=True, db_column='RUN_ID', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='analysis', to='emgapi.Run'),
        ),

        migrations.AlterUniqueTogether(
            name='run',
            unique_together=set([('run_id', 'accession'), ('accession', 'secondary_accession')]),
        ),
        migrations.AlterModelOptions(
            name='analysisjobdownload',
            options={'ordering': ('pipeline', 'group_type', 'alias')},
        ),
        migrations.AlterModelOptions(
            name='run',
            options={'ordering': ('accession',)},
        ),
        migrations.AlterModelOptions(
            name='studydownload',
            options={'ordering': ('pipeline', 'group_type', 'alias')},
        ),

        migrations.RunSQL(
            """INSERT INTO RUN (EXTERNAL_RUN_IDS, SECONDARY_ACCESSION,
                STATUS_ID, SAMPLE_ID, STUDY_ID, EXPERIMENT_TYPE_ID,
                INSTRUMENT_PLATFORM, INSTRUMENT_MODEL)
                SELECT distinct EXTERNAL_RUN_IDS, SECONDARY_ACCESSION,
                    RUN_STATUS_ID, SAMPLE_ID, STUDY_ID, EXPERIMENT_TYPE_ID,
                    group_concat(
                        INSTRUMENT_PLATFORM
                        ORDER BY INSTRUMENT_PLATFORM
                        SEPARATOR ','
                    ) as INSTRUMENT_PLATFORM,
                    group_concat(
                        INSTRUMENT_MODEL
                        ORDER BY INSTRUMENT_MODEL
                        SEPARATOR ','
                    ) as INSTRUMENT_MODEL
                    FROM ANALYSIS_JOB
                    GROUP BY EXTERNAL_RUN_IDS
            """
        ),
        migrations.RunPython(populate_runs),

    ]
